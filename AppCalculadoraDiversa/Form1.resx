<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9D9TSR3uWOqumwAAAABJRU5ErkJggg==
</value>
  </data>
</root>