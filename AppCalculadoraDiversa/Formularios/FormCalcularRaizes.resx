<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        p6lSKIQZdfw/FBnfl94JPEgAAAAASUVORK5CYII=
</value>
  </data>
</root>